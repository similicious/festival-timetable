---
import { getCollection } from "astro:content";
import Base from "@app/layouts/Base.astro";
import StageDay from "@app/components/StageDay.astro";

export async function getStaticPaths() {
  const stages = await getCollection("stages");

  return stages.map((stage) => ({
    params: { name: stage.data.name.toLowerCase() },
    props: { stage },
  }));
}

const { stage } = Astro.props;
---

<Base title={`${stage.data.name} Stage`}>
  <h1 class="text-4xl font-bold mb-4 text-pink-500">
    {stage.data.icon}
    {stage.data.name}
  </h1>
  <ol>
    {
      stage.data.days.map((stageDay) => (
        <li class="mb-4">
          <StageDay {stageDay} />
        </li>
      ))
    }
  </ol>
</Base>

<script>
  import { isAfter, isBefore } from "date-fns";

  const currentDate = new Date();

  function isActActive(element: Element) {
    const actStart = new Date(
      element.getAttribute("data-act-start") ?? new Date(0)
    );
    const actEnd = new Date(
      element.getAttribute("data-act-end") ?? new Date(0)
    );

    return isAfter(currentDate, actStart) && isBefore(currentDate, actEnd);
  }

  function toggleActiveAct(options: { scrollIntoView: boolean }) {
    document.querySelectorAll("[data-act]").forEach((element) => {
      element.removeAttribute("data-act-active");
      if (!isActActive(element)) {
        return;
      }
      element.setAttribute("data-act-active", "true");

      if (options.scrollIntoView) {
        element.scrollIntoView({ behavior: "smooth", block: "center" });
      }
    });
  }

  setInterval(() => toggleActiveAct({ scrollIntoView: false }), 60 * 1000);
  toggleActiveAct({ scrollIntoView: true });
</script>
